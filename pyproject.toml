[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pyrgo"
version = "2.2.10"
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
authors = [
    { name = "Tomas Perez Alvarez", email = "tomasperezalvarez@gmail.com" },
]
dependencies = [
    "click < 9",
    "ruff < 1",
    "mypy < 2",
    "pytest < 8",
    "result < 1",
    "build < 2",
    "pip-audit < 3",
    "vulture < 3",
    "tomlkit < 1",
    "pdoc < 15",
    "mashumaro[orjson,toml] < 4",
    "uv >= 0.1.5, < 1",
]

[project.optional-dependencies]
dev = ["pytest-cov < 5", "types-toml"]

[project.scripts]
pyrgo = "pyrgo.__main__:cli"

[project.urls]
Documentation = "https://github.com/Tomperez98/pyrgo#readme"
Issues = "https://github.com/Tomperez98/pyrgo/issues"
Source = "https://github.com/Tomperez98/pyrgo"

[tool.ruff]
line-length = 88
fix = false
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
logger-objects = ["pyrgo.logging.logger"]
ignore = [
    "ANN101",
    "D203",
    "D212",
    "COM812",
    "COM819",
    "D206",
    "E501",
    "ISC001",
    "Q",
    "W191",
    "UP007",
]
select = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"scripts/*.py" = ["INP001"]
"__init__.py" = ["D104"]
"tests/*.py" = ["INP001", "S101", "D"]

[tool.ruff.lint.isort]
known-first-party = ["pyrgo"]
combine-as-imports = true
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"

[tool.black]
line-length = 88
include = '\.pyi?$'

[tool.pytest.ini_options]
testpaths = ["tests"]
xfail_strict = true
addopts = [
    "--import-mode=importlib",
    "--strict-markers",
    "--cov-report=term-missing:skip-covered",
    "--cov-config=pyproject.toml",
    "--cov=pyrgo",
]
markers = ["integration: mark integration tests.", "unit: mark unittest."]

[tool.coverage.run]
branch = true
parallel = true
relative_files = true

[tool.coverage.report]
precision = 1
exclude_lines = ["if TYPE_CHECKING:", "raise NotImplementedError"]

[tool.mypy]
follow_imports = "normal"
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
warn_unused_configs = true
disallow_subclassing_any = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_calls = true
disallow_untyped_defs = true
explicit_package_bases = true

[tool.pyrgo]
extra-paths = ["scripts"]
extra-caches = [".coverage"]
vulture-allowlist = ".allowlist"
